#VRML V2.0 utf8

# this file has planet and billboard prototypes
# planet diameters are smaller bcs previous versions used diam for radius
# also uses smaller jpg files
# file has sun and planets to saturn no rings
##############################################################
# planet prototype
# must have a texture map and a size
# define and set public fields
PROTO Planet [field MFString mapurl ""
              field SFFloat plrad 1 ]
{
DEF PLANET Transform {
children [
  Shape {
      	geometry Sphere{radius IS plrad}
   	appearance Appearance{
      	  	texture ImageTexture{url IS mapurl}
   	}
  }
DEF YAXISROT OrientationInterpolator {
key [0.0 , .5, 1.0]
keyValue [0 1 0 0, 0 1 0 3.14, 0 1 0 6.28 ]
}

DEF TIMER TimeSensor {
cycleInterval 8.0
stopTime 0
startTime 1
loop TRUE
}

]}

ROUTE TIMER.fraction_changed TO YAXISROT.set_fraction
ROUTE YAXISROT.value_changed TO PLANET.set_rotation
}



###################################################################
# a billboard prototype
# input: plname = planet name (string)
#	pldata = information about planet (strings)
#	ctr = location of center of wording above planet
#	tr = translation values to move data text under planet
PROTO PlanetBillboard [
	field MFString plname "no name"
	field MFString pldata "no type" 
	field SFVec3f  tr 0 0 0
        field SFVec3f  ctr     3 3 3   ]
{
DEF PLBILL Transform{
translation IS ctr
children[
Billboard {
axisOfRotation 0 0 0
children [
DEF FTYPEN FontStyle{
  family "SANS"
  size .1
  style "BOLD"
  justify "MIDDLE"
}

DEF FTYPE2 FontStyle{
family "SERIF"
size .05
justify "MIDDLE"
spacing 1.2
}
  Shape{ 
    geometry Text {
      fontStyle USE FTYPEN
      string IS plname
    }
  }
Transform{ translation IS tr
 children[
Shape{ 
    geometry Text {
      string IS pldata
      fontStyle USE FTYPE2
    }
  }]}

]
}]}}

Viewpoint{
position -2 2.2 5
orientation 0 1 0 -1.8
description "From Sun"
}

#############################################

# ring prototype
PROTO RingOfSaturn []
{
DEF RING Transform {
children [
  Shape {
geometry Extrusion {
crossSection[
	0 0, 0 1, 0.866 0.5, 0.866 -0.5,
	0 -1, -0.866 -0.5, -0.866 0.5, 0,1]
#can apply rotation/scale at each point
#scale is 2d based on cross-section  vert horiz
spine[0 0 0, .07 0 0]
scale[2 2, 1.6 1.6]
beginCap FALSE
endCap FALSE
solid FALSE
}
appearance Appearance{
#material Material{
     	  	texture ImageTexture{url "ring1.gif"}
#diffuseColor .3 .5 .7
#shininess 1
#ambientIntensity 2
#specularColor 1 1 1
#transparency .5
#}
}
  }
]}}

###################################



#D.17 Guided tour

#Upon entry, a guide orb hovers in front of the viewer. Click on this and a tour through the
#world begins. The orb follows the user around on his tour. 
#A ProximitySensor ensures that the tour is started only if the user is close to the initial
#starting point. Note that this is done without scripts 
#thanks to the touchTime output of the TouchSensor.

Group { 
    children [

        DEF GuideTransform Transform {
            children [
                DEF TourGuide Viewpoint { jump FALSE },
                DEF ProxSensor ProximitySensor { size 50 50 50 }
                DEF StartTour TouchSensor { },
                Transform {
                   translation -1 2.2 5.5
                    children Shape { 
                        appearance Appearance {
                            material Material { 
                                diffuseColor 1 0.6 0 
                            }
                        }
                        geometry Cone { bottomRadius 0.05
					height .2 } 
                    } 
                }
          ]
        }


########################################################



Viewpoint{
position 15 0 .7
orientation 0 1 0 0
description "View of Earth"
}

Viewpoint{
position 143 0 2
orientation 0 1 0 0
description "View of Saturn"
}


############

# Sun
Transform{
translation 0 0 0
children[
Shape{
geometry Sphere{
radius 4} 
appearance Appearance{material Material{ diffuseColor 1 1 .5
emissiveColor 1 1 .5
transparency .2}}}
PointLight{
location 0 0 0
color 1 1 .5
intensity 10
radius 50
}
]}

# Mercury
Transform{
translation 6 0 0
children[Planet{
mapurl "cartoonface.jpg"
plrad .025
}]}

PlanetBillboard{
plname "MERCURY"
pldata ["Diameter: 5,000",
	"Distance from sun: 60,000,000 km",
	"Planet type: Rock"]
ctr 6 .1 0 
tr 0 -.24 0
}



# Venus
Transform{
translation 11 0 0
children[Planet{
mapurl "cartoonface.jpg"
plrad .06
}]}

PlanetBillboard{
plname "VENUS"
pldata ["Diameter: 12,000 km",
	"Distance from sun: 110,000,000 km",
	"Planet type: Rock"]
ctr 11 .1 0 
tr 0 -.24 0
}


#############################
# Earth
Transform{
translation 15 0 0
children[Planet {
  mapurl "earthmap.jpg"
  plrad .065
}]}

PlanetBillboard{
plname "EARTH"
pldata ["Diameter: 12,756 km",
	"Distance from sun: 150,000,000 km",
	"Planet type: Rock"]
ctr 15 .1 0 
tr 0 -.24 0
}

#############################
# Mars
Transform{
translation 23 0 0
children[Planet{
mapurl "marsmap.jpg"
plrad .035
}]}

PlanetBillboard{
plname "MARS"
pldata ["Diameter: 7,000 km",
	"Distance from sun: 230,000,000 km",
	"Planet type: Rock"]
ctr 23 .1 0 
tr 0 -.24 0
}

# Jupiter
Transform{
translation 78 0 0
children[Planet{
mapurl "jupitermap.jpg"
plrad .9
}]}

PlanetBillboard{
plname "JUPITER"
pldata ["Diameter: 18,000 km",
	"Distance from sun: 780,000,000 km",
	"Planet type: Gas"]
ctr 78 1.1 0 
tr 0 -1.9 0
}

# Saturn
Transform{
translation 143 0 0
children[Planet{
mapurl "saturnmap.jpg"
plrad .6
}
Transform{rotation 0 0 1 1.7 children[
RingOfSaturn{}]}
]}
PlanetBillboard{
plname "SATURN"
pldata ["Diameter: 12,756 km",
	"Distance from sun: 150,000,000 km",
	"Planet type: Gas"]
ctr 143 .8 0 
tr 0 -1.9 0
}
    ]
}
#end of Group with guide

#NavigationInfo { type "EXAMINE" }      # Use the Examine viewer


# it will pause at Earth then move to Saturn
DEF GuidePI PositionInterpolator {
    key [ 0, 0.25, 0.4, .6, .75, 1 ]
    keyValue [ -2 2.2 5, 14.5 0 .7, 14.5 0 .7, 23 0 .5, 78 0 3, 140 0 2]
}

DEF GuideRI OrientationInterpolator {
    key [ 0, 0.25, 0.4, 0.6, 0.75, 1 ]
    keyValue [ 0 1 0 -1.8, 0 1 0 -.6, 0 1 0 -.9,  0 1 0 -1.3,  0 1 0 -.9, 0 1 0 -.9]
}

# 		start		earth1	earth2		mars		jup		sat


DEF TS TimeSensor { cycleInterval 60 } # 40 second tour

ROUTE ProxSensor.isActive TO StartTour.set_enabled
ROUTE StartTour.touchTime TO TS.startTime
ROUTE TS.isActive TO TourGuide.set_bind
ROUTE TS.fraction_changed TO GuidePI.set_fraction
ROUTE TS.fraction_changed TO GuideRI.set_fraction
ROUTE GuidePI.value_changed TO GuideTransform.set_translation
ROUTE GuideRI.value_changed TO GuideTransform.set_rotation
